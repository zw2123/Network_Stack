-- ==============================================================
-- Generated by Vitis HLS v2023.2.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity arp_server_arp_table is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    macUpdate_resp_TVALID : IN STD_LOGIC;
    macLookup_resp_TVALID : IN STD_LOGIC;
    arpTableInsertFifo_dout : IN STD_LOGIC_VECTOR (80 downto 0);
    arpTableInsertFifo_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    arpTableInsertFifo_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    arpTableInsertFifo_empty_n : IN STD_LOGIC;
    arpTableInsertFifo_read : OUT STD_LOGIC;
    macIpEncode_req_TVALID : IN STD_LOGIC;
    macIpEncode_rsp_TREADY : IN STD_LOGIC;
    arpRequestMetaFifo_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    arpRequestMetaFifo_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    arpRequestMetaFifo_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    arpRequestMetaFifo_full_n : IN STD_LOGIC;
    arpRequestMetaFifo_write : OUT STD_LOGIC;
    macUpdate_req_TREADY : IN STD_LOGIC;
    macLookup_req_TREADY : IN STD_LOGIC;
    macIpEncode_req_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    macIpEncode_req_TREADY : OUT STD_LOGIC;
    macIpEncode_rsp_TDATA : OUT STD_LOGIC_VECTOR (55 downto 0);
    macIpEncode_rsp_TVALID : OUT STD_LOGIC;
    macLookup_req_TDATA : OUT STD_LOGIC_VECTOR (39 downto 0);
    macLookup_req_TVALID : OUT STD_LOGIC;
    macLookup_resp_TDATA : IN STD_LOGIC_VECTOR (55 downto 0);
    macLookup_resp_TREADY : OUT STD_LOGIC;
    macUpdate_req_TDATA : OUT STD_LOGIC_VECTOR (87 downto 0);
    macUpdate_req_TVALID : OUT STD_LOGIC;
    macUpdate_resp_TDATA : IN STD_LOGIC_VECTOR (55 downto 0);
    macUpdate_resp_TREADY : OUT STD_LOGIC );
end;


architecture behav of arp_server_arp_table is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_iter0_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_ST_iter1_fsm_state2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_ST_iter2_fsm_state3 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_ST_iter1_fsm_state0 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_iter2_fsm_state0 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_boolean_0 : BOOLEAN := false;

attribute shreg_extract : string;
    signal ap_CS_iter0_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    signal ap_CS_iter0_fsm_state1 : STD_LOGIC;
    signal ap_CS_iter1_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    signal ap_CS_iter1_fsm_state0 : STD_LOGIC;
    signal ap_CS_iter2_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    signal ap_CS_iter2_fsm_state0 : STD_LOGIC;
    signal tmp_1_i_nbreadreq_fu_78_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op23_read_state1 : BOOLEAN;
    signal tmp_2_i_nbreadreq_fu_92_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op27_read_state1 : BOOLEAN;
    signal tmp_i_nbreadreq_fu_106_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op34_read_state1 : BOOLEAN;
    signal tmp_7_i_nbreadreq_fu_120_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op40_read_state1 : BOOLEAN;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal arpState_load_reg_293 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_2_i_reg_300 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op50_write_state2 : BOOLEAN;
    signal tempReply_hit_reg_304 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op52_write_state2 : BOOLEAN;
    signal tmp_i_reg_314 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op56_write_state2 : BOOLEAN;
    signal tmp_7_i_reg_323 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op59_write_state2 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state2_io : BOOLEAN;
    signal ap_CS_iter1_fsm_state2 : STD_LOGIC;
    signal arpState_load_reg_293_pp0_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_2_i_reg_300_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op60_write_state3 : BOOLEAN;
    signal tmp_i_reg_314_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op61_write_state3 : BOOLEAN;
    signal tmp_7_i_reg_323_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op62_write_state3 : BOOLEAN;
    signal regslice_both_macIpEncode_rsp_U_apdone_blk : STD_LOGIC;
    signal regslice_both_macLookup_req_U_apdone_blk : STD_LOGIC;
    signal regslice_both_macUpdate_req_U_apdone_blk : STD_LOGIC;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state3_io : BOOLEAN;
    signal ap_CS_iter2_fsm_state3 : STD_LOGIC;
    signal arpState : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal at_inputIP : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal macIpEncode_req_TDATA_blk_n : STD_LOGIC;
    signal macIpEncode_rsp_TDATA_blk_n : STD_LOGIC;
    signal macLookup_req_TDATA_blk_n : STD_LOGIC;
    signal macLookup_resp_TDATA_blk_n : STD_LOGIC;
    signal macUpdate_req_TDATA_blk_n : STD_LOGIC;
    signal macUpdate_resp_TDATA_blk_n : STD_LOGIC;
    signal arpTableInsertFifo_blk_n : STD_LOGIC;
    signal arpRequestMetaFifo_blk_n : STD_LOGIC;
    signal tempReply_hit_fu_223_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tempReply_value_reg_309 : STD_LOGIC_VECTOR (47 downto 0);
    signal trunc_ln238_fu_237_p1 : STD_LOGIC_VECTOR (79 downto 0);
    signal trunc_ln238_reg_318 : STD_LOGIC_VECTOR (79 downto 0);
    signal macIpEncode_req_read_reg_327 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_arpState_flag_0_i_phi_fu_165_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_arpState_flag_0_i_reg_162 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_arpState_flag_4_i_phi_fu_176_p12 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_arpState_flag_4_i_reg_173 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_arpState_new_4_i_phi_fu_199_p12 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_reg_pp0_iter0_arpState_new_4_i_reg_196 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_i_33_fu_253_p3 : STD_LOGIC_VECTOR (48 downto 0);
    signal or_ln238_2_fu_269_p3 : STD_LOGIC_VECTOR (81 downto 0);
    signal shl_ln_fu_281_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal ap_NS_iter0_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_iter1_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_NS_iter2_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_ST_iter0_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_iter1_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_iter2_fsm_state3_blk : STD_LOGIC;
    signal regslice_both_macIpEncode_req_U_apdone_blk : STD_LOGIC;
    signal macIpEncode_req_TDATA_int_regslice : STD_LOGIC_VECTOR (31 downto 0);
    signal macIpEncode_req_TVALID_int_regslice : STD_LOGIC;
    signal macIpEncode_req_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_macIpEncode_req_U_ack_in : STD_LOGIC;
    signal macIpEncode_rsp_TDATA_int_regslice : STD_LOGIC_VECTOR (55 downto 0);
    signal macIpEncode_rsp_TVALID_int_regslice : STD_LOGIC;
    signal macIpEncode_rsp_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_macIpEncode_rsp_U_vld_out : STD_LOGIC;
    signal macLookup_req_TDATA_int_regslice : STD_LOGIC_VECTOR (39 downto 0);
    signal macLookup_req_TVALID_int_regslice : STD_LOGIC;
    signal macLookup_req_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_macLookup_req_U_vld_out : STD_LOGIC;
    signal regslice_both_macLookup_resp_U_apdone_blk : STD_LOGIC;
    signal macLookup_resp_TDATA_int_regslice : STD_LOGIC_VECTOR (55 downto 0);
    signal macLookup_resp_TVALID_int_regslice : STD_LOGIC;
    signal macLookup_resp_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_macLookup_resp_U_ack_in : STD_LOGIC;
    signal macUpdate_req_TDATA_int_regslice : STD_LOGIC_VECTOR (87 downto 0);
    signal macUpdate_req_TVALID_int_regslice : STD_LOGIC;
    signal macUpdate_req_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_macUpdate_req_U_vld_out : STD_LOGIC;
    signal regslice_both_macUpdate_resp_U_apdone_blk : STD_LOGIC;
    signal macUpdate_resp_TDATA_int_regslice : STD_LOGIC_VECTOR (55 downto 0);
    signal macUpdate_resp_TVALID_int_regslice : STD_LOGIC;
    signal macUpdate_resp_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_macUpdate_resp_U_ack_in : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component arp_server_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    regslice_both_macIpEncode_req_U : component arp_server_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => macIpEncode_req_TDATA,
        vld_in => macIpEncode_req_TVALID,
        ack_in => regslice_both_macIpEncode_req_U_ack_in,
        data_out => macIpEncode_req_TDATA_int_regslice,
        vld_out => macIpEncode_req_TVALID_int_regslice,
        ack_out => macIpEncode_req_TREADY_int_regslice,
        apdone_blk => regslice_both_macIpEncode_req_U_apdone_blk);

    regslice_both_macIpEncode_rsp_U : component arp_server_regslice_both
    generic map (
        DataWidth => 56)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => macIpEncode_rsp_TDATA_int_regslice,
        vld_in => macIpEncode_rsp_TVALID_int_regslice,
        ack_in => macIpEncode_rsp_TREADY_int_regslice,
        data_out => macIpEncode_rsp_TDATA,
        vld_out => regslice_both_macIpEncode_rsp_U_vld_out,
        ack_out => macIpEncode_rsp_TREADY,
        apdone_blk => regslice_both_macIpEncode_rsp_U_apdone_blk);

    regslice_both_macLookup_req_U : component arp_server_regslice_both
    generic map (
        DataWidth => 40)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => macLookup_req_TDATA_int_regslice,
        vld_in => macLookup_req_TVALID_int_regslice,
        ack_in => macLookup_req_TREADY_int_regslice,
        data_out => macLookup_req_TDATA,
        vld_out => regslice_both_macLookup_req_U_vld_out,
        ack_out => macLookup_req_TREADY,
        apdone_blk => regslice_both_macLookup_req_U_apdone_blk);

    regslice_both_macLookup_resp_U : component arp_server_regslice_both
    generic map (
        DataWidth => 56)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => macLookup_resp_TDATA,
        vld_in => macLookup_resp_TVALID,
        ack_in => regslice_both_macLookup_resp_U_ack_in,
        data_out => macLookup_resp_TDATA_int_regslice,
        vld_out => macLookup_resp_TVALID_int_regslice,
        ack_out => macLookup_resp_TREADY_int_regslice,
        apdone_blk => regslice_both_macLookup_resp_U_apdone_blk);

    regslice_both_macUpdate_req_U : component arp_server_regslice_both
    generic map (
        DataWidth => 88)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => macUpdate_req_TDATA_int_regslice,
        vld_in => macUpdate_req_TVALID_int_regslice,
        ack_in => macUpdate_req_TREADY_int_regslice,
        data_out => macUpdate_req_TDATA,
        vld_out => regslice_both_macUpdate_req_U_vld_out,
        ack_out => macUpdate_req_TREADY,
        apdone_blk => regslice_both_macUpdate_req_U_apdone_blk);

    regslice_both_macUpdate_resp_U : component arp_server_regslice_both
    generic map (
        DataWidth => 56)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => macUpdate_resp_TDATA,
        vld_in => macUpdate_resp_TVALID,
        ack_in => regslice_both_macUpdate_resp_U_ack_in,
        data_out => macUpdate_resp_TDATA_int_regslice,
        vld_out => macUpdate_resp_TVALID_int_regslice,
        ack_out => macUpdate_resp_TREADY_int_regslice,
        apdone_blk => regslice_both_macUpdate_resp_U_apdone_blk);





    ap_CS_iter0_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_iter0_fsm <= ap_ST_iter0_fsm_state1;
            else
                ap_CS_iter0_fsm <= ap_NS_iter0_fsm;
            end if;
        end if;
    end process;


    ap_CS_iter1_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_iter1_fsm <= ap_ST_iter1_fsm_state0;
            else
                ap_CS_iter1_fsm <= ap_NS_iter1_fsm;
            end if;
        end if;
    end process;


    ap_CS_iter2_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_iter2_fsm <= ap_ST_iter2_fsm_state0;
            else
                ap_CS_iter2_fsm <= ap_NS_iter2_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((not(((ap_done_reg = ap_const_logic_1) or (ap_const_boolean_1 = ap_block_state3_io) or (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2))) and (ap_const_logic_1 = ap_CS_iter2_fsm_state3))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_done_reg = ap_const_logic_1) or (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0) or ((ap_const_logic_1 = ap_CS_iter2_fsm_state3) and ((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2))) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state2) and ((ap_const_boolean_1 = ap_block_state2_io) or (ap_const_boolean_1 = ap_block_state2_pp0_stage0_iter1))))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1) and (ap_phi_mux_arpState_flag_4_i_phi_fu_176_p12 = ap_const_lv1_1))) then
                arpState <= ap_phi_mux_arpState_new_4_i_phi_fu_199_p12;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_done_reg = ap_const_logic_1) or (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0) or ((ap_const_logic_1 = ap_CS_iter2_fsm_state3) and ((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2))) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state2) and ((ap_const_boolean_1 = ap_block_state2_io) or (ap_const_boolean_1 = ap_block_state2_pp0_stage0_iter1))))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1))) then
                arpState_load_reg_293 <= arpState;
                macIpEncode_req_read_reg_327 <= macIpEncode_req_TDATA_int_regslice;
                tempReply_hit_reg_304 <= tempReply_hit_fu_223_p1;
                tempReply_value_reg_309 <= macLookup_resp_TDATA_int_regslice(48 downto 1);
                tmp_2_i_reg_300 <= tmp_2_i_nbreadreq_fu_92_p3;
                tmp_7_i_reg_323 <= tmp_7_i_nbreadreq_fu_120_p3;
                tmp_i_reg_314 <= tmp_i_nbreadreq_fu_106_p3;
                trunc_ln238_reg_318 <= trunc_ln238_fu_237_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_done_reg = ap_const_logic_1) or (ap_const_boolean_1 = ap_block_state2_io) or (ap_const_boolean_1 = ap_block_state2_pp0_stage0_iter1) or ((ap_const_logic_1 = ap_CS_iter2_fsm_state3) and ((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2))))) and (ap_const_logic_1 = ap_CS_iter1_fsm_state2))) then
                arpState_load_reg_293_pp0_iter1_reg <= arpState_load_reg_293;
                tmp_2_i_reg_300_pp0_iter1_reg <= tmp_2_i_reg_300;
                tmp_7_i_reg_323_pp0_iter1_reg <= tmp_7_i_reg_323;
                tmp_i_reg_314_pp0_iter1_reg <= tmp_i_reg_314;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((arpState = ap_const_lv2_2)) and not((arpState = ap_const_lv2_1)) and not(((ap_done_reg = ap_const_logic_1) or (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0) or ((ap_const_logic_1 = ap_CS_iter2_fsm_state3) and ((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2))) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state2) and ((ap_const_boolean_1 = ap_block_state2_io) or (ap_const_boolean_1 = ap_block_state2_pp0_stage0_iter1))))) and (tmp_7_i_nbreadreq_fu_120_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1))) then
                at_inputIP <= macIpEncode_req_TDATA_int_regslice;
            end if;
        end if;
    end process;

    ap_NS_iter0_fsm_assign_proc : process (ap_CS_iter0_fsm, ap_done_reg, ap_block_state1_pp0_stage0_iter0, ap_block_state2_pp0_stage0_iter1, ap_block_state2_io, ap_CS_iter1_fsm_state2, ap_block_state3_pp0_stage0_iter2, ap_block_state3_io, ap_CS_iter2_fsm_state3)
    begin
        case ap_CS_iter0_fsm is
            when ap_ST_iter0_fsm_state1 => 
                ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state1;
            when others =>  
                ap_NS_iter0_fsm <= "X";
        end case;
    end process;

    ap_NS_iter1_fsm_assign_proc : process (ap_CS_iter0_fsm_state1, ap_CS_iter1_fsm, ap_done_reg, ap_block_state1_pp0_stage0_iter0, ap_block_state2_pp0_stage0_iter1, ap_block_state2_io, ap_CS_iter1_fsm_state2, ap_block_state3_pp0_stage0_iter2, ap_block_state3_io, ap_CS_iter2_fsm_state3)
    begin
        case ap_CS_iter1_fsm is
            when ap_ST_iter1_fsm_state2 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (ap_const_boolean_1 = ap_block_state2_io) or (ap_const_boolean_1 = ap_block_state2_pp0_stage0_iter1) or ((ap_const_logic_1 = ap_CS_iter2_fsm_state3) and ((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2))))) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1))) then
                    ap_NS_iter1_fsm <= ap_ST_iter1_fsm_state2;
                elsif ((not(((ap_done_reg = ap_const_logic_1) or (ap_const_boolean_1 = ap_block_state2_io) or (ap_const_boolean_1 = ap_block_state2_pp0_stage0_iter1) or ((ap_const_logic_1 = ap_CS_iter2_fsm_state3) and ((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2))))) and ((ap_const_logic_0 = ap_CS_iter0_fsm_state1) or ((ap_const_logic_1 = ap_CS_iter0_fsm_state1) and (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0))))) then
                    ap_NS_iter1_fsm <= ap_ST_iter1_fsm_state0;
                else
                    ap_NS_iter1_fsm <= ap_ST_iter1_fsm_state2;
                end if;
            when ap_ST_iter1_fsm_state0 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0) or ((ap_const_logic_1 = ap_CS_iter2_fsm_state3) and ((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2))) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state2) and ((ap_const_boolean_1 = ap_block_state2_io) or (ap_const_boolean_1 = ap_block_state2_pp0_stage0_iter1))))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1))) then
                    ap_NS_iter1_fsm <= ap_ST_iter1_fsm_state2;
                else
                    ap_NS_iter1_fsm <= ap_ST_iter1_fsm_state0;
                end if;
            when others =>  
                ap_NS_iter1_fsm <= "XX";
        end case;
    end process;

    ap_NS_iter2_fsm_assign_proc : process (ap_CS_iter2_fsm, ap_done_reg, ap_block_state2_pp0_stage0_iter1, ap_block_state2_io, ap_CS_iter1_fsm_state2, ap_block_state3_pp0_stage0_iter2, ap_block_state3_io, ap_CS_iter2_fsm_state3)
    begin
        case ap_CS_iter2_fsm is
            when ap_ST_iter2_fsm_state3 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (ap_const_boolean_1 = ap_block_state3_io) or (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2))) and not(((ap_const_boolean_1 = ap_block_state2_io) or (ap_const_boolean_1 = ap_block_state2_pp0_stage0_iter1))) and (ap_const_logic_1 = ap_CS_iter1_fsm_state2))) then
                    ap_NS_iter2_fsm <= ap_ST_iter2_fsm_state3;
                elsif ((not(((ap_done_reg = ap_const_logic_1) or (ap_const_boolean_1 = ap_block_state3_io) or (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2))) and ((ap_const_logic_0 = ap_CS_iter1_fsm_state2) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state2) and ((ap_const_boolean_1 = ap_block_state2_io) or (ap_const_boolean_1 = ap_block_state2_pp0_stage0_iter1)))))) then
                    ap_NS_iter2_fsm <= ap_ST_iter2_fsm_state0;
                else
                    ap_NS_iter2_fsm <= ap_ST_iter2_fsm_state3;
                end if;
            when ap_ST_iter2_fsm_state0 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (ap_const_boolean_1 = ap_block_state2_io) or (ap_const_boolean_1 = ap_block_state2_pp0_stage0_iter1) or ((ap_const_logic_1 = ap_CS_iter2_fsm_state3) and ((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2))))) and (ap_const_logic_1 = ap_CS_iter1_fsm_state2))) then
                    ap_NS_iter2_fsm <= ap_ST_iter2_fsm_state3;
                else
                    ap_NS_iter2_fsm <= ap_ST_iter2_fsm_state0;
                end if;
            when others =>  
                ap_NS_iter2_fsm <= "XX";
        end case;
    end process;
    ap_CS_iter0_fsm_state1 <= ap_CS_iter0_fsm(0);
    ap_CS_iter1_fsm_state0 <= ap_CS_iter1_fsm(0);
    ap_CS_iter1_fsm_state2 <= ap_CS_iter1_fsm(1);
    ap_CS_iter2_fsm_state0 <= ap_CS_iter2_fsm(0);
    ap_CS_iter2_fsm_state3 <= ap_CS_iter2_fsm(1);

    ap_ST_iter0_fsm_state1_blk_assign_proc : process(ap_block_state1_pp0_stage0_iter0)
    begin
        if ((ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0)) then 
            ap_ST_iter0_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_iter0_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_iter1_fsm_state2_blk_assign_proc : process(ap_block_state2_pp0_stage0_iter1, ap_block_state2_io)
    begin
        if (((ap_const_boolean_1 = ap_block_state2_io) or (ap_const_boolean_1 = ap_block_state2_pp0_stage0_iter1))) then 
            ap_ST_iter1_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_iter1_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_iter2_fsm_state3_blk_assign_proc : process(ap_block_state3_pp0_stage0_iter2, ap_block_state3_io)
    begin
        if (((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2))) then 
            ap_ST_iter2_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_iter2_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start, ap_predicate_op23_read_state1, ap_predicate_op27_read_state1, arpTableInsertFifo_empty_n, ap_predicate_op34_read_state1, ap_predicate_op40_read_state1, ap_done_reg, macIpEncode_req_TVALID_int_regslice, macLookup_resp_TVALID_int_regslice, macUpdate_resp_TVALID_int_regslice)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0) or ((ap_predicate_op40_read_state1 = ap_const_boolean_1) and (macIpEncode_req_TVALID_int_regslice = ap_const_logic_0)) or ((ap_predicate_op34_read_state1 = ap_const_boolean_1) and (arpTableInsertFifo_empty_n = ap_const_logic_0)) or ((ap_predicate_op27_read_state1 = ap_const_boolean_1) and (macLookup_resp_TVALID_int_regslice = ap_const_logic_0)) or ((ap_predicate_op23_read_state1 = ap_const_boolean_1) and (macUpdate_resp_TVALID_int_regslice = ap_const_logic_0)));
    end process;


    ap_block_state2_io_assign_proc : process(ap_predicate_op50_write_state2, ap_predicate_op56_write_state2, ap_predicate_op59_write_state2, macIpEncode_rsp_TREADY_int_regslice, macLookup_req_TREADY_int_regslice, macUpdate_req_TREADY_int_regslice)
    begin
                ap_block_state2_io <= (((macUpdate_req_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op56_write_state2 = ap_const_boolean_1)) or ((macLookup_req_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op59_write_state2 = ap_const_boolean_1)) or ((macIpEncode_rsp_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op50_write_state2 = ap_const_boolean_1)));
    end process;


    ap_block_state2_pp0_stage0_iter1_assign_proc : process(ap_predicate_op50_write_state2, arpRequestMetaFifo_full_n, ap_predicate_op52_write_state2, ap_predicate_op56_write_state2, ap_predicate_op59_write_state2, macIpEncode_rsp_TREADY_int_regslice, macLookup_req_TREADY_int_regslice, macUpdate_req_TREADY_int_regslice)
    begin
                ap_block_state2_pp0_stage0_iter1 <= (((macUpdate_req_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op56_write_state2 = ap_const_boolean_1)) or ((macLookup_req_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op59_write_state2 = ap_const_boolean_1)) or ((macIpEncode_rsp_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op50_write_state2 = ap_const_boolean_1)) or ((ap_predicate_op52_write_state2 = ap_const_boolean_1) and (arpRequestMetaFifo_full_n = ap_const_logic_0)));
    end process;


    ap_block_state3_io_assign_proc : process(ap_predicate_op60_write_state3, ap_predicate_op61_write_state3, ap_predicate_op62_write_state3, macIpEncode_rsp_TREADY_int_regslice, macLookup_req_TREADY_int_regslice, macUpdate_req_TREADY_int_regslice)
    begin
                ap_block_state3_io <= (((macUpdate_req_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op61_write_state3 = ap_const_boolean_1)) or ((macLookup_req_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op62_write_state3 = ap_const_boolean_1)) or ((macIpEncode_rsp_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op60_write_state3 = ap_const_boolean_1)));
    end process;


    ap_block_state3_pp0_stage0_iter2_assign_proc : process(ap_predicate_op60_write_state3, ap_predicate_op61_write_state3, ap_predicate_op62_write_state3, regslice_both_macIpEncode_rsp_U_apdone_blk, regslice_both_macLookup_req_U_apdone_blk, regslice_both_macUpdate_req_U_apdone_blk, macIpEncode_rsp_TREADY_int_regslice, macLookup_req_TREADY_int_regslice, macUpdate_req_TREADY_int_regslice)
    begin
                ap_block_state3_pp0_stage0_iter2 <= ((regslice_both_macUpdate_req_U_apdone_blk = ap_const_logic_1) or (regslice_both_macLookup_req_U_apdone_blk = ap_const_logic_1) or (regslice_both_macIpEncode_rsp_U_apdone_blk = ap_const_logic_1) or ((macUpdate_req_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op61_write_state3 = ap_const_boolean_1)) or ((macLookup_req_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op62_write_state3 = ap_const_boolean_1)) or ((macIpEncode_rsp_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op60_write_state3 = ap_const_boolean_1)));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_block_state3_pp0_stage0_iter2, ap_block_state3_io, ap_CS_iter2_fsm_state3)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_const_boolean_1 = ap_block_state3_io) or (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2))) and (ap_const_logic_1 = ap_CS_iter2_fsm_state3))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_iter0_fsm_state1, ap_CS_iter1_fsm_state0, ap_CS_iter2_fsm_state0)
    begin
        if (((ap_const_logic_1 = ap_CS_iter2_fsm_state0) and (ap_const_logic_1 = ap_CS_iter1_fsm_state0) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_arpState_flag_0_i_phi_fu_165_p4_assign_proc : process(tmp_i_nbreadreq_fu_106_p3, arpState, ap_phi_reg_pp0_iter0_arpState_flag_0_i_reg_162)
    begin
        if ((not((arpState = ap_const_lv2_2)) and not((arpState = ap_const_lv2_1)))) then
            if ((tmp_i_nbreadreq_fu_106_p3 = ap_const_lv1_0)) then 
                ap_phi_mux_arpState_flag_0_i_phi_fu_165_p4 <= ap_const_lv1_0;
            elsif ((tmp_i_nbreadreq_fu_106_p3 = ap_const_lv1_1)) then 
                ap_phi_mux_arpState_flag_0_i_phi_fu_165_p4 <= ap_const_lv1_1;
            else 
                ap_phi_mux_arpState_flag_0_i_phi_fu_165_p4 <= ap_phi_reg_pp0_iter0_arpState_flag_0_i_reg_162;
            end if;
        else 
            ap_phi_mux_arpState_flag_0_i_phi_fu_165_p4 <= ap_phi_reg_pp0_iter0_arpState_flag_0_i_reg_162;
        end if; 
    end process;


    ap_phi_mux_arpState_flag_4_i_phi_fu_176_p12_assign_proc : process(tmp_1_i_nbreadreq_fu_78_p3, tmp_2_i_nbreadreq_fu_92_p3, tmp_7_i_nbreadreq_fu_120_p3, arpState, ap_phi_mux_arpState_flag_0_i_phi_fu_165_p4, ap_phi_reg_pp0_iter0_arpState_flag_4_i_reg_173)
    begin
        if ((not((arpState = ap_const_lv2_2)) and not((arpState = ap_const_lv2_1)) and (tmp_7_i_nbreadreq_fu_120_p3 = ap_const_lv1_0))) then 
            ap_phi_mux_arpState_flag_4_i_phi_fu_176_p12 <= ap_phi_mux_arpState_flag_0_i_phi_fu_165_p4;
        elsif ((((tmp_2_i_nbreadreq_fu_92_p3 = ap_const_lv1_0) and (arpState = ap_const_lv2_2)) or ((tmp_1_i_nbreadreq_fu_78_p3 = ap_const_lv1_0) and (arpState = ap_const_lv2_1)))) then 
            ap_phi_mux_arpState_flag_4_i_phi_fu_176_p12 <= ap_const_lv1_0;
        elsif (((not((arpState = ap_const_lv2_2)) and not((arpState = ap_const_lv2_1)) and (tmp_7_i_nbreadreq_fu_120_p3 = ap_const_lv1_1)) or ((tmp_2_i_nbreadreq_fu_92_p3 = ap_const_lv1_1) and (arpState = ap_const_lv2_2)) or ((tmp_1_i_nbreadreq_fu_78_p3 = ap_const_lv1_1) and (arpState = ap_const_lv2_1)))) then 
            ap_phi_mux_arpState_flag_4_i_phi_fu_176_p12 <= ap_const_lv1_1;
        else 
            ap_phi_mux_arpState_flag_4_i_phi_fu_176_p12 <= ap_phi_reg_pp0_iter0_arpState_flag_4_i_reg_173;
        end if; 
    end process;


    ap_phi_mux_arpState_new_4_i_phi_fu_199_p12_assign_proc : process(tmp_1_i_nbreadreq_fu_78_p3, tmp_2_i_nbreadreq_fu_92_p3, tmp_7_i_nbreadreq_fu_120_p3, arpState, ap_phi_reg_pp0_iter0_arpState_new_4_i_reg_196)
    begin
        if ((not((arpState = ap_const_lv2_2)) and not((arpState = ap_const_lv2_1)) and (tmp_7_i_nbreadreq_fu_120_p3 = ap_const_lv1_0))) then 
            ap_phi_mux_arpState_new_4_i_phi_fu_199_p12 <= ap_const_lv2_1;
        elsif ((not((arpState = ap_const_lv2_2)) and not((arpState = ap_const_lv2_1)) and (tmp_7_i_nbreadreq_fu_120_p3 = ap_const_lv1_1))) then 
            ap_phi_mux_arpState_new_4_i_phi_fu_199_p12 <= ap_const_lv2_2;
        elsif ((((tmp_2_i_nbreadreq_fu_92_p3 = ap_const_lv1_1) and (arpState = ap_const_lv2_2)) or ((tmp_1_i_nbreadreq_fu_78_p3 = ap_const_lv1_1) and (arpState = ap_const_lv2_1)) or ((tmp_2_i_nbreadreq_fu_92_p3 = ap_const_lv1_0) and (arpState = ap_const_lv2_2)) or ((tmp_1_i_nbreadreq_fu_78_p3 = ap_const_lv1_0) and (arpState = ap_const_lv2_1)))) then 
            ap_phi_mux_arpState_new_4_i_phi_fu_199_p12 <= ap_const_lv2_0;
        else 
            ap_phi_mux_arpState_new_4_i_phi_fu_199_p12 <= ap_phi_reg_pp0_iter0_arpState_new_4_i_reg_196;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_arpState_flag_0_i_reg_162 <= "X";
    ap_phi_reg_pp0_iter0_arpState_flag_4_i_reg_173 <= "X";
    ap_phi_reg_pp0_iter0_arpState_new_4_i_reg_196 <= "XX";

    ap_predicate_op23_read_state1_assign_proc : process(tmp_1_i_nbreadreq_fu_78_p3, arpState)
    begin
                ap_predicate_op23_read_state1 <= ((tmp_1_i_nbreadreq_fu_78_p3 = ap_const_lv1_1) and (arpState = ap_const_lv2_1));
    end process;


    ap_predicate_op27_read_state1_assign_proc : process(tmp_2_i_nbreadreq_fu_92_p3, arpState)
    begin
                ap_predicate_op27_read_state1 <= ((tmp_2_i_nbreadreq_fu_92_p3 = ap_const_lv1_1) and (arpState = ap_const_lv2_2));
    end process;


    ap_predicate_op34_read_state1_assign_proc : process(tmp_i_nbreadreq_fu_106_p3, arpState)
    begin
                ap_predicate_op34_read_state1 <= (not((arpState = ap_const_lv2_2)) and not((arpState = ap_const_lv2_1)) and (tmp_i_nbreadreq_fu_106_p3 = ap_const_lv1_1));
    end process;


    ap_predicate_op40_read_state1_assign_proc : process(tmp_7_i_nbreadreq_fu_120_p3, arpState)
    begin
                ap_predicate_op40_read_state1 <= (not((arpState = ap_const_lv2_2)) and not((arpState = ap_const_lv2_1)) and (tmp_7_i_nbreadreq_fu_120_p3 = ap_const_lv1_1));
    end process;


    ap_predicate_op50_write_state2_assign_proc : process(arpState_load_reg_293, tmp_2_i_reg_300)
    begin
                ap_predicate_op50_write_state2 <= ((arpState_load_reg_293 = ap_const_lv2_2) and (tmp_2_i_reg_300 = ap_const_lv1_1));
    end process;


    ap_predicate_op52_write_state2_assign_proc : process(arpState_load_reg_293, tmp_2_i_reg_300, tempReply_hit_reg_304)
    begin
                ap_predicate_op52_write_state2 <= ((arpState_load_reg_293 = ap_const_lv2_2) and (tempReply_hit_reg_304 = ap_const_lv1_0) and (tmp_2_i_reg_300 = ap_const_lv1_1));
    end process;


    ap_predicate_op56_write_state2_assign_proc : process(arpState_load_reg_293, tmp_i_reg_314)
    begin
                ap_predicate_op56_write_state2 <= (not((arpState_load_reg_293 = ap_const_lv2_2)) and not((arpState_load_reg_293 = ap_const_lv2_1)) and (tmp_i_reg_314 = ap_const_lv1_1));
    end process;


    ap_predicate_op59_write_state2_assign_proc : process(arpState_load_reg_293, tmp_7_i_reg_323)
    begin
                ap_predicate_op59_write_state2 <= (not((arpState_load_reg_293 = ap_const_lv2_2)) and not((arpState_load_reg_293 = ap_const_lv2_1)) and (tmp_7_i_reg_323 = ap_const_lv1_1));
    end process;


    ap_predicate_op60_write_state3_assign_proc : process(arpState_load_reg_293_pp0_iter1_reg, tmp_2_i_reg_300_pp0_iter1_reg)
    begin
                ap_predicate_op60_write_state3 <= ((tmp_2_i_reg_300_pp0_iter1_reg = ap_const_lv1_1) and (arpState_load_reg_293_pp0_iter1_reg = ap_const_lv2_2));
    end process;


    ap_predicate_op61_write_state3_assign_proc : process(arpState_load_reg_293_pp0_iter1_reg, tmp_i_reg_314_pp0_iter1_reg)
    begin
                ap_predicate_op61_write_state3 <= (not((arpState_load_reg_293_pp0_iter1_reg = ap_const_lv2_1)) and not((arpState_load_reg_293_pp0_iter1_reg = ap_const_lv2_2)) and (tmp_i_reg_314_pp0_iter1_reg = ap_const_lv1_1));
    end process;


    ap_predicate_op62_write_state3_assign_proc : process(arpState_load_reg_293_pp0_iter1_reg, tmp_7_i_reg_323_pp0_iter1_reg)
    begin
                ap_predicate_op62_write_state3 <= (not((arpState_load_reg_293_pp0_iter1_reg = ap_const_lv2_1)) and not((arpState_load_reg_293_pp0_iter1_reg = ap_const_lv2_2)) and (tmp_7_i_reg_323_pp0_iter1_reg = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(ap_CS_iter0_fsm_state1, ap_done_reg, ap_block_state1_pp0_stage0_iter0, ap_block_state2_pp0_stage0_iter1, ap_block_state2_io, ap_CS_iter1_fsm_state2, ap_block_state3_pp0_stage0_iter2, ap_block_state3_io, ap_CS_iter2_fsm_state3)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0) or ((ap_const_logic_1 = ap_CS_iter2_fsm_state3) and ((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2))) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state2) and ((ap_const_boolean_1 = ap_block_state2_io) or (ap_const_boolean_1 = ap_block_state2_pp0_stage0_iter1))))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    arpRequestMetaFifo_blk_n_assign_proc : process(arpRequestMetaFifo_full_n, ap_predicate_op52_write_state2, ap_CS_iter1_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_iter1_fsm_state2) and (ap_predicate_op52_write_state2 = ap_const_boolean_1))) then 
            arpRequestMetaFifo_blk_n <= arpRequestMetaFifo_full_n;
        else 
            arpRequestMetaFifo_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    arpRequestMetaFifo_din <= at_inputIP;

    arpRequestMetaFifo_write_assign_proc : process(ap_done_reg, ap_predicate_op52_write_state2, ap_block_state2_pp0_stage0_iter1, ap_block_state2_io, ap_CS_iter1_fsm_state2, ap_block_state3_pp0_stage0_iter2, ap_block_state3_io, ap_CS_iter2_fsm_state3)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_const_boolean_1 = ap_block_state2_io) or (ap_const_boolean_1 = ap_block_state2_pp0_stage0_iter1) or ((ap_const_logic_1 = ap_CS_iter2_fsm_state3) and ((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2))))) and (ap_const_logic_1 = ap_CS_iter1_fsm_state2) and (ap_predicate_op52_write_state2 = ap_const_boolean_1))) then 
            arpRequestMetaFifo_write <= ap_const_logic_1;
        else 
            arpRequestMetaFifo_write <= ap_const_logic_0;
        end if; 
    end process;


    arpTableInsertFifo_blk_n_assign_proc : process(ap_start, ap_CS_iter0_fsm_state1, arpTableInsertFifo_empty_n, ap_predicate_op34_read_state1, ap_done_reg)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_predicate_op34_read_state1 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1) and (ap_start = ap_const_logic_1))) then 
            arpTableInsertFifo_blk_n <= arpTableInsertFifo_empty_n;
        else 
            arpTableInsertFifo_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    arpTableInsertFifo_read_assign_proc : process(ap_CS_iter0_fsm_state1, ap_predicate_op34_read_state1, ap_done_reg, ap_block_state1_pp0_stage0_iter0, ap_block_state2_pp0_stage0_iter1, ap_block_state2_io, ap_CS_iter1_fsm_state2, ap_block_state3_pp0_stage0_iter2, ap_block_state3_io, ap_CS_iter2_fsm_state3)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0) or ((ap_const_logic_1 = ap_CS_iter2_fsm_state3) and ((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2))) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state2) and ((ap_const_boolean_1 = ap_block_state2_io) or (ap_const_boolean_1 = ap_block_state2_pp0_stage0_iter1))))) and (ap_predicate_op34_read_state1 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1))) then 
            arpTableInsertFifo_read <= ap_const_logic_1;
        else 
            arpTableInsertFifo_read <= ap_const_logic_0;
        end if; 
    end process;


    macIpEncode_req_TDATA_blk_n_assign_proc : process(ap_start, ap_CS_iter0_fsm_state1, ap_predicate_op40_read_state1, ap_done_reg, macIpEncode_req_TVALID_int_regslice)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_predicate_op40_read_state1 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1) and (ap_start = ap_const_logic_1))) then 
            macIpEncode_req_TDATA_blk_n <= macIpEncode_req_TVALID_int_regslice;
        else 
            macIpEncode_req_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    macIpEncode_req_TREADY <= regslice_both_macIpEncode_req_U_ack_in;

    macIpEncode_req_TREADY_int_regslice_assign_proc : process(ap_CS_iter0_fsm_state1, ap_predicate_op40_read_state1, ap_done_reg, ap_block_state1_pp0_stage0_iter0, ap_block_state2_pp0_stage0_iter1, ap_block_state2_io, ap_CS_iter1_fsm_state2, ap_block_state3_pp0_stage0_iter2, ap_block_state3_io, ap_CS_iter2_fsm_state3)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0) or ((ap_const_logic_1 = ap_CS_iter2_fsm_state3) and ((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2))) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state2) and ((ap_const_boolean_1 = ap_block_state2_io) or (ap_const_boolean_1 = ap_block_state2_pp0_stage0_iter1))))) and (ap_predicate_op40_read_state1 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1))) then 
            macIpEncode_req_TREADY_int_regslice <= ap_const_logic_1;
        else 
            macIpEncode_req_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    macIpEncode_rsp_TDATA_blk_n_assign_proc : process(ap_predicate_op50_write_state2, ap_CS_iter1_fsm_state2, ap_predicate_op60_write_state3, ap_CS_iter2_fsm_state3, macIpEncode_rsp_TREADY_int_regslice)
    begin
        if ((((ap_const_logic_1 = ap_CS_iter2_fsm_state3) and (ap_predicate_op60_write_state3 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state2) and (ap_predicate_op50_write_state2 = ap_const_boolean_1)))) then 
            macIpEncode_rsp_TDATA_blk_n <= macIpEncode_rsp_TREADY_int_regslice;
        else 
            macIpEncode_rsp_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    macIpEncode_rsp_TDATA_int_regslice <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_i_33_fu_253_p3),56));
    macIpEncode_rsp_TVALID <= regslice_both_macIpEncode_rsp_U_vld_out;

    macIpEncode_rsp_TVALID_int_regslice_assign_proc : process(ap_done_reg, ap_predicate_op50_write_state2, ap_block_state2_pp0_stage0_iter1, ap_block_state2_io, ap_CS_iter1_fsm_state2, ap_block_state3_pp0_stage0_iter2, ap_block_state3_io, ap_CS_iter2_fsm_state3)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_const_boolean_1 = ap_block_state2_io) or (ap_const_boolean_1 = ap_block_state2_pp0_stage0_iter1) or ((ap_const_logic_1 = ap_CS_iter2_fsm_state3) and ((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2))))) and (ap_const_logic_1 = ap_CS_iter1_fsm_state2) and (ap_predicate_op50_write_state2 = ap_const_boolean_1))) then 
            macIpEncode_rsp_TVALID_int_regslice <= ap_const_logic_1;
        else 
            macIpEncode_rsp_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    macLookup_req_TDATA_blk_n_assign_proc : process(ap_predicate_op59_write_state2, ap_CS_iter1_fsm_state2, ap_predicate_op62_write_state3, ap_CS_iter2_fsm_state3, macLookup_req_TREADY_int_regslice)
    begin
        if ((((ap_const_logic_1 = ap_CS_iter2_fsm_state3) and (ap_predicate_op62_write_state3 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state2) and (ap_predicate_op59_write_state2 = ap_const_boolean_1)))) then 
            macLookup_req_TDATA_blk_n <= macLookup_req_TREADY_int_regslice;
        else 
            macLookup_req_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    macLookup_req_TDATA_int_regslice <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_281_p3),40));
    macLookup_req_TVALID <= regslice_both_macLookup_req_U_vld_out;

    macLookup_req_TVALID_int_regslice_assign_proc : process(ap_done_reg, ap_predicate_op59_write_state2, ap_block_state2_pp0_stage0_iter1, ap_block_state2_io, ap_CS_iter1_fsm_state2, ap_block_state3_pp0_stage0_iter2, ap_block_state3_io, ap_CS_iter2_fsm_state3)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_const_boolean_1 = ap_block_state2_io) or (ap_const_boolean_1 = ap_block_state2_pp0_stage0_iter1) or ((ap_const_logic_1 = ap_CS_iter2_fsm_state3) and ((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2))))) and (ap_const_logic_1 = ap_CS_iter1_fsm_state2) and (ap_predicate_op59_write_state2 = ap_const_boolean_1))) then 
            macLookup_req_TVALID_int_regslice <= ap_const_logic_1;
        else 
            macLookup_req_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    macLookup_resp_TDATA_blk_n_assign_proc : process(ap_start, ap_CS_iter0_fsm_state1, ap_predicate_op27_read_state1, ap_done_reg, macLookup_resp_TVALID_int_regslice)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_predicate_op27_read_state1 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1) and (ap_start = ap_const_logic_1))) then 
            macLookup_resp_TDATA_blk_n <= macLookup_resp_TVALID_int_regslice;
        else 
            macLookup_resp_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    macLookup_resp_TREADY <= regslice_both_macLookup_resp_U_ack_in;

    macLookup_resp_TREADY_int_regslice_assign_proc : process(ap_CS_iter0_fsm_state1, ap_predicate_op27_read_state1, ap_done_reg, ap_block_state1_pp0_stage0_iter0, ap_block_state2_pp0_stage0_iter1, ap_block_state2_io, ap_CS_iter1_fsm_state2, ap_block_state3_pp0_stage0_iter2, ap_block_state3_io, ap_CS_iter2_fsm_state3)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0) or ((ap_const_logic_1 = ap_CS_iter2_fsm_state3) and ((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2))) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state2) and ((ap_const_boolean_1 = ap_block_state2_io) or (ap_const_boolean_1 = ap_block_state2_pp0_stage0_iter1))))) and (ap_predicate_op27_read_state1 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1))) then 
            macLookup_resp_TREADY_int_regslice <= ap_const_logic_1;
        else 
            macLookup_resp_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    macUpdate_req_TDATA_blk_n_assign_proc : process(ap_predicate_op56_write_state2, ap_CS_iter1_fsm_state2, ap_predicate_op61_write_state3, ap_CS_iter2_fsm_state3, macUpdate_req_TREADY_int_regslice)
    begin
        if ((((ap_const_logic_1 = ap_CS_iter2_fsm_state3) and (ap_predicate_op61_write_state3 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state2) and (ap_predicate_op56_write_state2 = ap_const_boolean_1)))) then 
            macUpdate_req_TDATA_blk_n <= macUpdate_req_TREADY_int_regslice;
        else 
            macUpdate_req_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    macUpdate_req_TDATA_int_regslice <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln238_2_fu_269_p3),88));
    macUpdate_req_TVALID <= regslice_both_macUpdate_req_U_vld_out;

    macUpdate_req_TVALID_int_regslice_assign_proc : process(ap_done_reg, ap_predicate_op56_write_state2, ap_block_state2_pp0_stage0_iter1, ap_block_state2_io, ap_CS_iter1_fsm_state2, ap_block_state3_pp0_stage0_iter2, ap_block_state3_io, ap_CS_iter2_fsm_state3)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_const_boolean_1 = ap_block_state2_io) or (ap_const_boolean_1 = ap_block_state2_pp0_stage0_iter1) or ((ap_const_logic_1 = ap_CS_iter2_fsm_state3) and ((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2))))) and (ap_const_logic_1 = ap_CS_iter1_fsm_state2) and (ap_predicate_op56_write_state2 = ap_const_boolean_1))) then 
            macUpdate_req_TVALID_int_regslice <= ap_const_logic_1;
        else 
            macUpdate_req_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    macUpdate_resp_TDATA_blk_n_assign_proc : process(ap_start, ap_CS_iter0_fsm_state1, ap_predicate_op23_read_state1, ap_done_reg, macUpdate_resp_TVALID_int_regslice)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_predicate_op23_read_state1 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1) and (ap_start = ap_const_logic_1))) then 
            macUpdate_resp_TDATA_blk_n <= macUpdate_resp_TVALID_int_regslice;
        else 
            macUpdate_resp_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    macUpdate_resp_TREADY <= regslice_both_macUpdate_resp_U_ack_in;

    macUpdate_resp_TREADY_int_regslice_assign_proc : process(ap_CS_iter0_fsm_state1, ap_predicate_op23_read_state1, ap_done_reg, ap_block_state1_pp0_stage0_iter0, ap_block_state2_pp0_stage0_iter1, ap_block_state2_io, ap_CS_iter1_fsm_state2, ap_block_state3_pp0_stage0_iter2, ap_block_state3_io, ap_CS_iter2_fsm_state3)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0) or ((ap_const_logic_1 = ap_CS_iter2_fsm_state3) and ((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2))) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state2) and ((ap_const_boolean_1 = ap_block_state2_io) or (ap_const_boolean_1 = ap_block_state2_pp0_stage0_iter1))))) and (ap_predicate_op23_read_state1 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1))) then 
            macUpdate_resp_TREADY_int_regslice <= ap_const_logic_1;
        else 
            macUpdate_resp_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    or_ln238_2_fu_269_p3 <= (trunc_ln238_reg_318 & ap_const_lv2_0);
    shl_ln_fu_281_p3 <= (macIpEncode_req_read_reg_327 & ap_const_lv1_0);
    tempReply_hit_fu_223_p1 <= macLookup_resp_TDATA_int_regslice(1 - 1 downto 0);
    tmp_1_i_nbreadreq_fu_78_p3 <= (0=>(macUpdate_resp_TVALID_int_regslice), others=>'-');
    tmp_2_i_nbreadreq_fu_92_p3 <= (0=>(macLookup_resp_TVALID_int_regslice), others=>'-');
    tmp_7_i_nbreadreq_fu_120_p3 <= (0=>(macIpEncode_req_TVALID_int_regslice), others=>'-');
    tmp_i_33_fu_253_p3 <= (tempReply_hit_reg_304 & tempReply_value_reg_309);
    tmp_i_nbreadreq_fu_106_p3 <= (0=>(arpTableInsertFifo_empty_n), others=>'-');
    trunc_ln238_fu_237_p1 <= arpTableInsertFifo_dout(80 - 1 downto 0);
end behav;
